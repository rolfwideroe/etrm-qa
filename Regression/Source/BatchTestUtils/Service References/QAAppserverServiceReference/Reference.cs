//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElvizTestUtils.QAAppserverServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QaAppServerService.ElvizDWordRegKeys", Namespace="http://schemas.datacontract.org/2004/07/QATestService")]
    public enum QaAppServerServiceElvizDWordRegKeys : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseMembershipAuthentication = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseIntegratedSecurity = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QaAppServerService.ElvizDWordRegValues", Namespace="http://schemas.datacontract.org/2004/07/QATestService")]
    public enum QaAppServerServiceElvizDWordRegValues : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        On = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Off = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QaAppServerService.ElvizStringRegKeys", Namespace="http://schemas.datacontract.org/2004/07/QATestService")]
    public enum QaAppServerServiceElvizStringRegKeys : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElvizUserName = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElvizPassword = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VizECM = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VizPrices = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vizsystem = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VizDatawarehouse = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportingDatabase = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MembershipServiceURL = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QAAppserverServiceReference.IQaAppServerService")]
    public interface IQaAppServerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQaAppServerService/GetSettings", ReplyAction="http://tempuri.org/IQaAppServerService/GetSettingsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetSettings(string[] settingNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQaAppServerService/SetSettingsDWord", ReplyAction="http://tempuri.org/IQaAppServerService/SetSettingsDWordResponse")]
        System.Collections.Generic.KeyValuePair<string, ElvizTestUtils.QAAppserverServiceReference.QaAppServerServiceElvizDWordRegValues> SetSettingsDWord(ElvizTestUtils.QAAppserverServiceReference.QaAppServerServiceElvizDWordRegKeys keyName, ElvizTestUtils.QAAppserverServiceReference.QaAppServerServiceElvizDWordRegValues value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQaAppServerService/SetSettingsString", ReplyAction="http://tempuri.org/IQaAppServerService/SetSettingsStringResponse")]
        System.Collections.Generic.KeyValuePair<string, string> SetSettingsString(ElvizTestUtils.QAAppserverServiceReference.QaAppServerServiceElvizStringRegKeys keyName, string keyValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQaAppServerService/ReinstallDbPatch", ReplyAction="http://tempuri.org/IQaAppServerService/ReinstallDbPatchResponse")]
        void ReinstallDbPatch();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQaAppServerService/StartElvizServices", ReplyAction="http://tempuri.org/IQaAppServerService/StartElvizServicesResponse")]
        void StartElvizServices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQaAppServerService/StopElvizServices", ReplyAction="http://tempuri.org/IQaAppServerService/StopElvizServicesResponse")]
        void StopElvizServices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQaAppServerService/RestartElvizServices", ReplyAction="http://tempuri.org/IQaAppServerService/RestartElvizServicesResponse")]
        void RestartElvizServices();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQaAppServerServiceChannel : ElvizTestUtils.QAAppserverServiceReference.IQaAppServerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QaAppServerServiceClient : System.ServiceModel.ClientBase<ElvizTestUtils.QAAppserverServiceReference.IQaAppServerService>, ElvizTestUtils.QAAppserverServiceReference.IQaAppServerService {
        
        public QaAppServerServiceClient() {
        }
        
        public QaAppServerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QaAppServerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QaAppServerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QaAppServerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetSettings(string[] settingNames) {
            return base.Channel.GetSettings(settingNames);
        }
        
        public System.Collections.Generic.KeyValuePair<string, ElvizTestUtils.QAAppserverServiceReference.QaAppServerServiceElvizDWordRegValues> SetSettingsDWord(ElvizTestUtils.QAAppserverServiceReference.QaAppServerServiceElvizDWordRegKeys keyName, ElvizTestUtils.QAAppserverServiceReference.QaAppServerServiceElvizDWordRegValues value) {
            return base.Channel.SetSettingsDWord(keyName, value);
        }
        
        public System.Collections.Generic.KeyValuePair<string, string> SetSettingsString(ElvizTestUtils.QAAppserverServiceReference.QaAppServerServiceElvizStringRegKeys keyName, string keyValue) {
            return base.Channel.SetSettingsString(keyName, keyValue);
        }
        
        public void ReinstallDbPatch() {
            base.Channel.ReinstallDbPatch();
        }
        
        public void StartElvizServices() {
            base.Channel.StartElvizServices();
        }
        
        public void StopElvizServices() {
            base.Channel.StopElvizServices();
        }
        
        public void RestartElvizServices() {
            base.Channel.RestartElvizServices();
        }
    }
}
