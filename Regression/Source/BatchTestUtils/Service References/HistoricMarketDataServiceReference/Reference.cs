//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElvizTestUtils.HistoricMarketDataServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GapHandling", Namespace="Elviz.API")]
    public enum GapHandling : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowGaps = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorIfGaps = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FillSmallGapsWithPreviousValue = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Elviz.API", ConfigurationName="HistoricMarketDataServiceReference.IHistoricMarketDataService")]
    public interface IHistoricMarketDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="Elviz.API/IHistoricMarketDataService/GetHistoricExchangeRates", ReplyAction="Elviz.API/IHistoricMarketDataService/GetHistoricExchangeRatesResponse")]
        System.Collections.Generic.KeyValuePair<System.DateTime, double>[] GetHistoricExchangeRates(string baseCurrencyISOCode, string crossCurrencyISOCode, string currencySource, System.DateTime firstDate, System.DateTime lastDate, string resolution, ElvizTestUtils.HistoricMarketDataServiceReference.GapHandling gapHandling);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHistoricMarketDataServiceChannel : ElvizTestUtils.HistoricMarketDataServiceReference.IHistoricMarketDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HistoricMarketDataServiceClient : System.ServiceModel.ClientBase<ElvizTestUtils.HistoricMarketDataServiceReference.IHistoricMarketDataService>, ElvizTestUtils.HistoricMarketDataServiceReference.IHistoricMarketDataService {
        
        public HistoricMarketDataServiceClient() {
        }
        
        public HistoricMarketDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HistoricMarketDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HistoricMarketDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HistoricMarketDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.KeyValuePair<System.DateTime, double>[] GetHistoricExchangeRates(string baseCurrencyISOCode, string crossCurrencyISOCode, string currencySource, System.DateTime firstDate, System.DateTime lastDate, string resolution, ElvizTestUtils.HistoricMarketDataServiceReference.GapHandling gapHandling) {
            return base.Channel.GetHistoricExchangeRates(baseCurrencyISOCode, crossCurrencyISOCode, currencySource, firstDate, lastDate, resolution, gapHandling);
        }
    }
}
